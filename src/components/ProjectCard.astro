---
interface Props {
  project: any;
}

const { project } = Astro.props;
const { data, slug } = project;

// Get the correct language prefix for the project URL
const langPrefix = slug.startsWith('fr/') ? '/fr' : '';
const projectSlug = slug.replace(/^(en|fr)\//, '');
---

<a 
  href={`${langPrefix}/projects/${projectSlug}`}
  class="group block rounded-lg border border-black/10 dark:border-white/10 overflow-hidden hover:border-black/20 dark:hover:border-white/20 transition-all"
>
  <!-- Project Image -->
  <div class="aspect-[2/1] overflow-hidden bg-black/5 dark:bg-white/5">
    {data.image ? (
      <img 
        src={data.image} 
        alt={data.title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      />
    ) : (
      <div class="w-full h-full flex items-center justify-center">
        <svg 
          class="w-16 h-16 opacity-20" 
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
          />
        </svg>
      </div>
    )}
  </div>

  <!-- Project Content -->
  <div class="p-6 space-y-3">
    <div class="flex items-start justify-between gap-2">
      <h3 class="text-xl font-semibold text-black dark:text-white group-hover:text-black/80 dark:group-hover:text-white/80 transition-colors">
        {data.title}
      </h3>
      <svg 
        class="w-5 h-5 flex-shrink-0 mt-1 opacity-50 group-hover:translate-x-1 group-hover:opacity-100 transition-all" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M9 5l7 7-7 7"
        />
      </svg>
    </div>

    {data.description && (
      <p class="text-sm opacity-75 line-clamp-2">
        {data.description}
      </p>
    )}

    {data.tech && data.tech.length > 0 && (
      <div class="flex flex-wrap gap-2 pt-2">
        {data.tech.slice(0, 4).map((tech: string) => (
          <span class="text-xs px-2 py-1 rounded bg-black/5 dark:bg-white/5 border border-black/10 dark:border-white/10">
            {tech}
          </span>
        ))}
        {data.tech.length > 4 && (
          <span class="text-xs px-2 py-1 opacity-50">
            +{data.tech.length - 4}
          </span>
        )}
      </div>
    )}
  </div>
</a>
